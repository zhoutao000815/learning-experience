//链接：https://www.nowcoder.com/questionTerminal/a811535fed784ea492b63622c28c75c5
//来源：牛客网
//
//五子棋
//
//NowCoder最近爱上了五子棋，现在给你一个棋局，请你帮忙判断其中有没有五子连珠（超过五颗也算）。
//
//输入描述 :
//输入有多组数据，每组数据为一张20x20的棋盘。
//
//其中黑子用“*”表示，白子用“ + ”表示，空白位置用“.”表示。
//
//
//输出描述 :
//如果棋盘上存在五子连珠（无论哪种颜色的棋子），输入“Yes”，否则输出“No”。
//示例1
//输入
//....................
//....................
//....................
//....................
//......*.............
//.......*............
//........*...........
//....++++.*..........
//..........*.........
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//.......*............
//...... + *++ + .........
//.......*............
//.......*............
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//....................
//输出
//Yes
//No

#include<bits/stdc++.h>
using namespace std;
bool check(string &tmp)
{
	return tmp == "+++++" || tmp == "*****";
}

void victory(vector<vector<char>> &board)
{
	//1.行胜利
	for (int i = 0; i<20; i++)
	{
		for (int j = 5; j <= 20; j++)
		{
			string tmp(board[i].begin() + j - 5, board[i].begin() + j);
			if (check(tmp))
			{
				cout << "Yes" << endl;
				return;
			}
		}
	}
	//2.列胜利
	for (int i = 4; i<20; i++)
	{
		for (int j = 0; j<20; j++)
		{
			string tmp;
			for (int k = 0; k<5; k++)
			{
				tmp += board[i - k][j];
			}
			if (check(tmp))
			{
				cout << "Yes" << endl;
				return;
			}
		}
	}
	//3.\斜胜利
	for (int i = 4; i<20; i++)
	{
		for (int j = 4; j<20; j++)
		{
			string tmp;
			for (int k = 0; k<5; k++)
			{
				tmp += board[i - k][j - k];
			}
			if (check(tmp))
			{
				cout << "Yes" << endl;
				return;
			}
		}
	}
	//3./斜胜利
	for (int i = 4; i<20; i++)
	{
		for (int j = 0; j<16; j++)
		{
			string tmp;
			for (int k = 0; k<5; k++)
			{
				tmp += board[i - k][j + k];
			}
			if (check(tmp))
			{
				cout << "Yes" << endl;
				return;
			}
		}
	}
	//无人胜利。
	cout << "No" << endl;
	return;
}

int main()
{
	char tmp;
	while (cin >> tmp)
	{
		vector<vector<char>> board(20, vector<char>(20));
		board[0][0] = tmp;
		for (int i = 0; i<20; i++)
		{
			for (int j = 0; j<20; j++)
			{
				if (i == 0 && j == 0)
					continue;
				cin >> board[i][j];
			}
		}
		victory(board);
	}
	return 0;
}