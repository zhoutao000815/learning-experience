//5830. 三除数
//给你一个整数 n 。如果 n 恰好有三个正除数 ，返回 true ；否则，返回 false 。
//
//如果存在整数 k ，满足 n = k * m ，那么整数 m 就是 n 的一个 除数 。
//
//
//
//示例 1：
//
//输入：n = 2
//输出：false
//解释：2 只有两个除数：1 和 2 。
//示例 2：
//
//输入：n = 4
//输出：true
//解释：4 有三个除数：1、2 和 4 。
//
//
//提示：
//
//1 <= n <= 104
//通过次数4, 422提交次数8, 117
//请问您在哪类招聘中遇到此题？
//贡献者
//LeetCode

//求素数的套路：任何一个数字n的最大因数，必然小于等于（根号n）。
class Solution {
public:
	bool isThree(int n) {
		int cnt = 0;
		for (int i = 1; i * i <= n; ++i){
			if (n % i == 0){
				if (i != n / i){
					// 此时 i 与 n / i 为不同整数
					cnt += 2;
				}
				else{
					// 此时 i 与 n / i 相等
					cnt += 1;
				}
			}
		}
		return cnt == 3;
	}
};
